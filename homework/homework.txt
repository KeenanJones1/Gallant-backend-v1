 The biggest problem with an application, if it lives long enough, will become dealing with change. 

 Arranging code to efficently accommodate change is a matter of design. 

 Goal is to keep it simple, arrange classes to do what you want them to do right now and design, so its easy to change later. 

 Design is more the art of preserving changeability than it is the act of achieving perfection. 

 Code should: TRUE

 Transparent : The consequence of change should be obvious in the code that is changing and in distant code that relies upon it. 

 Reasonable: The cost of any change should be proportional to the benefits the change achieves. 

Usable: Existing code should be usable in new and unexpected contexts. 

Exemplary: The code itself should be encourage those who change it to perpetuate these qualities.


Creating classes with single responsbility: 
 A class should do the smallest possible useful thing.
 Ex. Bicycles and Gears ~> bikes.rb


